if(DEFINED BRAINSCommonLib_DIR AND NOT EXISTS ${BRAINSCommonLib_DIR})
  message(FATAL_ERROR "BRAINSCommonLib_DIR variable is defined but corresponds to non-existing directory")
endif()

if(NOT DEFINED BRAINSCommonLib_DIR)

  set(proj BRAINSCommonLib)
  ExternalProject_Add(${proj}
    SVN_REPOSITORY "http://www.nitrc.org/svn/brains/BRAINSCommonLib/trunk"
    SVN_USERNAME "slicerbot"
    SVN_PASSWORD "slicer"
    SOURCE_DIR ${proj}
    BINARY_DIR ${proj}-build
    DEPENDS ${BRAINSCommonLib_DEPENDENCIES}
    CMAKE_GENERATOR ${gen}
    CMAKE_ARGS  ${LOCAL_CMAKE_BUILD_OPTIONS}
    --no-warn-unused-cli
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_C_FLAGS_RELEASE:STRING=${CMAKE_C_FLAGS_RELEASE}
    -DCMAKE_C_FLAGS_DEBUG:STRING=${CMAKE_C_FLAGS_DEBUG}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DCMAKE_CXX_FLAGS_RELEASE:STRING=${CMAKE_CXX_FLAGS_RELEASE}
    -DCMAKE_CXX_FLAGS_DEBUG:STRING=${CMAKE_CXX_FLAGS_DEBUG}
    -DBUILD_EXAMPLES:BOOL=OFF
    -DBUILD_TESTING:BOOL=OFF
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DITK_DIR:PATH=${ITK_DIR}
    # INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}
    )
  set(BRAINSCommonLib_DEPEND "${proj}")
  set(BRAINSCommonLib_DIR ${CMAKE_INSTALL_PREFIX}/lib/BRAINSCommonLib)
  #  message(STATUS "BRAINSCommonLib_DIR = ${BRAINSCommonLib_DIR}")
endif(NOT DEFINED BRAINSCommonLib_DIR)
